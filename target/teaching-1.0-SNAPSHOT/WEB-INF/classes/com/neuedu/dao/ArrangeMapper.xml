<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.dao.ArrangeMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.pojo.Arrange" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="g_id" property="gId" jdbcType="INTEGER" />
    <result column="p_id" property="pId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="project" property="project" jdbcType="VARCHAR" />
    <result column="git" property="git" jdbcType="VARCHAR" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="t_id" property="tId" jdbcType="INTEGER" />
    <result column="start_date" property="startDate" jdbcType="DATE" />
    <result column="end_date" property="endDate" jdbcType="DATE" />
    <result column="is_del" property="isDel" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, g_id, p_id, type, project, git, note, t_id, start_date, end_date, is_del
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.neuedu.pojo.ArrangeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from arrange
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from arrange
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from arrange
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.pojo.ArrangeExample" >
    delete from arrange
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.pojo.Arrange" >
    insert into arrange (id, g_id, p_id, 
      type, project, git, 
      note, t_id, start_date, 
      end_date, is_del)
    values (#{id,jdbcType=INTEGER}, #{gId,jdbcType=INTEGER}, #{pId,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{project,jdbcType=VARCHAR}, #{git,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR}, #{tId,jdbcType=INTEGER}, #{startDate,jdbcType=DATE}, 
      #{endDate,jdbcType=DATE}, #{isDel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.neuedu.pojo.Arrange" >
    insert into arrange
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="gId != null" >
        g_id,
      </if>
      <if test="pId != null" >
        p_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="project != null" >
        project,
      </if>
      <if test="git != null" >
        git,
      </if>
      <if test="note != null" >
        note,
      </if>
      <if test="tId != null" >
        t_id,
      </if>
      <if test="startDate != null" >
        start_date,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="isDel != null" >
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="gId != null" >
        #{gId,jdbcType=INTEGER},
      </if>
      <if test="pId != null" >
        #{pId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="project != null" >
        #{project,jdbcType=VARCHAR},
      </if>
      <if test="git != null" >
        #{git,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="tId != null" >
        #{tId,jdbcType=INTEGER},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=DATE},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.pojo.ArrangeExample" resultType="java.lang.Integer" >
    select count(*) from arrange
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update arrange
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.gId != null" >
        g_id = #{record.gId,jdbcType=INTEGER},
      </if>
      <if test="record.pId != null" >
        p_id = #{record.pId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.project != null" >
        project = #{record.project,jdbcType=VARCHAR},
      </if>
      <if test="record.git != null" >
        git = #{record.git,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null" >
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.tId != null" >
        t_id = #{record.tId,jdbcType=INTEGER},
      </if>
      <if test="record.startDate != null" >
        start_date = #{record.startDate,jdbcType=DATE},
      </if>
      <if test="record.endDate != null" >
        end_date = #{record.endDate,jdbcType=DATE},
      </if>
      <if test="record.isDel != null" >
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update arrange
    set id = #{record.id,jdbcType=INTEGER},
      g_id = #{record.gId,jdbcType=INTEGER},
      p_id = #{record.pId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      project = #{record.project,jdbcType=VARCHAR},
      git = #{record.git,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      t_id = #{record.tId,jdbcType=INTEGER},
      start_date = #{record.startDate,jdbcType=DATE},
      end_date = #{record.endDate,jdbcType=DATE},
      is_del = #{record.isDel,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.pojo.Arrange" >
    update arrange
    <set >
      <if test="gId != null" >
        g_id = #{gId,jdbcType=INTEGER},
      </if>
      <if test="pId != null" >
        p_id = #{pId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="project != null" >
        project = #{project,jdbcType=VARCHAR},
      </if>
      <if test="git != null" >
        git = #{git,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="tId != null" >
        t_id = #{tId,jdbcType=INTEGER},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=DATE},
      </if>
      <if test="isDel != null" >
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.pojo.Arrange" >
    update arrange
    set g_id = #{gId,jdbcType=INTEGER},
      p_id = #{pId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      project = #{project,jdbcType=VARCHAR},
      git = #{git,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      t_id = #{tId,jdbcType=INTEGER},
      start_date = #{startDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE},
      is_del = #{isDel,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>