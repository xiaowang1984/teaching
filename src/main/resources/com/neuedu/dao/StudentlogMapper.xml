<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.dao.StudentlogMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.pojo.Studentlog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="sid" property="sid" jdbcType="INTEGER" />
    <result column="dat" property="dat" jdbcType="DATE" />
    <result column="moodcode" property="moodcode" jdbcType="INTEGER" />
    <result column="lecturercode" property="lecturercode" jdbcType="INTEGER" />
    <result column="managercode" property="managercode" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.neuedu.pojo.Studentlog" extends="BaseResultMap" >
    <result column="wtxt" property="wtxt" jdbcType="LONGVARCHAR" />
    <result column="moodtxt" property="moodtxt" jdbcType="LONGVARCHAR" />
    <result column="lecturertxt" property="lecturertxt" jdbcType="LONGVARCHAR" />
    <result column="managertxt" property="managertxt" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, sid, dat, moodcode, lecturercode, managercode
  </sql>
  <sql id="Blob_Column_List" >
    wtxt, moodtxt, lecturertxt, managertxt
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.neuedu.pojo.StudentlogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from studentlog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.neuedu.pojo.StudentlogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from studentlog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from studentlog
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from studentlog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.pojo.StudentlogExample" >
    delete from studentlog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.pojo.Studentlog" >
    insert into studentlog (id, sid, dat, moodcode, 
      lecturercode, managercode, wtxt, 
      moodtxt, lecturertxt, managertxt
      )
    values (#{id,jdbcType=INTEGER}, #{sid,jdbcType=INTEGER}, #{dat,jdbcType=DATE}, #{moodcode,jdbcType=INTEGER}, 
      #{lecturercode,jdbcType=INTEGER}, #{managercode,jdbcType=INTEGER}, #{wtxt,jdbcType=LONGVARCHAR}, 
      #{moodtxt,jdbcType=LONGVARCHAR}, #{lecturertxt,jdbcType=LONGVARCHAR}, #{managertxt,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.pojo.Studentlog" >
    insert into studentlog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sid != null" >
        sid,
      </if>
      <if test="dat != null" >
        dat,
      </if>
      <if test="moodcode != null" >
        moodcode,
      </if>
      <if test="lecturercode != null" >
        lecturercode,
      </if>
      <if test="managercode != null" >
        managercode,
      </if>
      <if test="wtxt != null" >
        wtxt,
      </if>
      <if test="moodtxt != null" >
        moodtxt,
      </if>
      <if test="lecturertxt != null" >
        lecturertxt,
      </if>
      <if test="managertxt != null" >
        managertxt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sid != null" >
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="dat != null" >
        #{dat,jdbcType=DATE},
      </if>
      <if test="moodcode != null" >
        #{moodcode,jdbcType=INTEGER},
      </if>
      <if test="lecturercode != null" >
        #{lecturercode,jdbcType=INTEGER},
      </if>
      <if test="managercode != null" >
        #{managercode,jdbcType=INTEGER},
      </if>
      <if test="wtxt != null" >
        #{wtxt,jdbcType=LONGVARCHAR},
      </if>
      <if test="moodtxt != null" >
        #{moodtxt,jdbcType=LONGVARCHAR},
      </if>
      <if test="lecturertxt != null" >
        #{lecturertxt,jdbcType=LONGVARCHAR},
      </if>
      <if test="managertxt != null" >
        #{managertxt,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.pojo.StudentlogExample" resultType="java.lang.Integer" >
    select count(*) from studentlog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update studentlog
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sid != null" >
        sid = #{record.sid,jdbcType=INTEGER},
      </if>
      <if test="record.dat != null" >
        dat = #{record.dat,jdbcType=DATE},
      </if>
      <if test="record.moodcode != null" >
        moodcode = #{record.moodcode,jdbcType=INTEGER},
      </if>
      <if test="record.lecturercode != null" >
        lecturercode = #{record.lecturercode,jdbcType=INTEGER},
      </if>
      <if test="record.managercode != null" >
        managercode = #{record.managercode,jdbcType=INTEGER},
      </if>
      <if test="record.wtxt != null" >
        wtxt = #{record.wtxt,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.moodtxt != null" >
        moodtxt = #{record.moodtxt,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.lecturertxt != null" >
        lecturertxt = #{record.lecturertxt,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.managertxt != null" >
        managertxt = #{record.managertxt,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update studentlog
    set id = #{record.id,jdbcType=INTEGER},
      sid = #{record.sid,jdbcType=INTEGER},
      dat = #{record.dat,jdbcType=DATE},
      moodcode = #{record.moodcode,jdbcType=INTEGER},
      lecturercode = #{record.lecturercode,jdbcType=INTEGER},
      managercode = #{record.managercode,jdbcType=INTEGER},
      wtxt = #{record.wtxt,jdbcType=LONGVARCHAR},
      moodtxt = #{record.moodtxt,jdbcType=LONGVARCHAR},
      lecturertxt = #{record.lecturertxt,jdbcType=LONGVARCHAR},
      managertxt = #{record.managertxt,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update studentlog
    set id = #{record.id,jdbcType=INTEGER},
      sid = #{record.sid,jdbcType=INTEGER},
      dat = #{record.dat,jdbcType=DATE},
      moodcode = #{record.moodcode,jdbcType=INTEGER},
      lecturercode = #{record.lecturercode,jdbcType=INTEGER},
      managercode = #{record.managercode,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.pojo.Studentlog" >
    update studentlog
    <set >
      <if test="sid != null" >
        sid = #{sid,jdbcType=INTEGER},
      </if>
      <if test="dat != null" >
        dat = #{dat,jdbcType=DATE},
      </if>
      <if test="moodcode != null" >
        moodcode = #{moodcode,jdbcType=INTEGER},
      </if>
      <if test="lecturercode != null" >
        lecturercode = #{lecturercode,jdbcType=INTEGER},
      </if>
      <if test="managercode != null" >
        managercode = #{managercode,jdbcType=INTEGER},
      </if>
      <if test="wtxt != null" >
        wtxt = #{wtxt,jdbcType=LONGVARCHAR},
      </if>
      <if test="moodtxt != null" >
        moodtxt = #{moodtxt,jdbcType=LONGVARCHAR},
      </if>
      <if test="lecturertxt != null" >
        lecturertxt = #{lecturertxt,jdbcType=LONGVARCHAR},
      </if>
      <if test="managertxt != null" >
        managertxt = #{managertxt,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.neuedu.pojo.Studentlog" >
    update studentlog
    set sid = #{sid,jdbcType=INTEGER},
      dat = #{dat,jdbcType=DATE},
      moodcode = #{moodcode,jdbcType=INTEGER},
      lecturercode = #{lecturercode,jdbcType=INTEGER},
      managercode = #{managercode,jdbcType=INTEGER},
      wtxt = #{wtxt,jdbcType=LONGVARCHAR},
      moodtxt = #{moodtxt,jdbcType=LONGVARCHAR},
      lecturertxt = #{lecturertxt,jdbcType=LONGVARCHAR},
      managertxt = #{managertxt,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.pojo.Studentlog" >
    update studentlog
    set sid = #{sid,jdbcType=INTEGER},
      dat = #{dat,jdbcType=DATE},
      moodcode = #{moodcode,jdbcType=INTEGER},
      lecturercode = #{lecturercode,jdbcType=INTEGER},
      managercode = #{managercode,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>