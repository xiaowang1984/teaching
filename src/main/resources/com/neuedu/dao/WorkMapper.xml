<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.dao.WorkMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.pojo.Work" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="gid" property="gid" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="extend" property="extend" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="language" property="language" jdbcType="INTEGER" />
    <result column="point" property="point" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="provider" property="provider" jdbcType="INTEGER" />
    <result column="is_del" property="isDel" jdbcType="INTEGER" />
    <result column="start_dat" property="startDat" jdbcType="DATE" />
    <result column="end_dat" property="endDat" jdbcType="DATE" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.neuedu.pojo.Work" extends="BaseResultMap" >
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, gid, name, level, extend, type, count, language, point, url, provider, is_del, 
    start_dat, end_dat
  </sql>
  <sql id="Blob_Column_List" >
    description
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.neuedu.pojo.WorkExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from work
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.neuedu.pojo.WorkExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from work
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from work
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from work
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.pojo.WorkExample" >
    delete from work
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.pojo.Work" >
    insert into work (id, gid, name, 
      level, extend, type, 
      count, language, point, 
      url, provider, is_del, 
      start_dat, end_dat, description
      )
    values (#{id,jdbcType=INTEGER}, #{gid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{level,jdbcType=INTEGER}, #{extend,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{count,jdbcType=INTEGER}, #{language,jdbcType=INTEGER}, #{point,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{provider,jdbcType=INTEGER}, #{isDel,jdbcType=INTEGER}, 
      #{startDat,jdbcType=DATE}, #{endDat,jdbcType=DATE}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.pojo.Work" >
    insert into work
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="gid != null" >
        gid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="extend != null" >
        extend,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="language != null" >
        language,
      </if>
      <if test="point != null" >
        point,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="provider != null" >
        provider,
      </if>
      <if test="isDel != null" >
        is_del,
      </if>
      <if test="startDat != null" >
        start_dat,
      </if>
      <if test="endDat != null" >
        end_dat,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="gid != null" >
        #{gid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="extend != null" >
        #{extend,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="language != null" >
        #{language,jdbcType=INTEGER},
      </if>
      <if test="point != null" >
        #{point,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="provider != null" >
        #{provider,jdbcType=INTEGER},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="startDat != null" >
        #{startDat,jdbcType=DATE},
      </if>
      <if test="endDat != null" >
        #{endDat,jdbcType=DATE},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.pojo.WorkExample" resultType="java.lang.Integer" >
    select count(*) from work
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update work
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.gid != null" >
        gid = #{record.gid,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.extend != null" >
        extend = #{record.extend,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.count != null" >
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.language != null" >
        language = #{record.language,jdbcType=INTEGER},
      </if>
      <if test="record.point != null" >
        point = #{record.point,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.provider != null" >
        provider = #{record.provider,jdbcType=INTEGER},
      </if>
      <if test="record.isDel != null" >
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
      <if test="record.startDat != null" >
        start_dat = #{record.startDat,jdbcType=DATE},
      </if>
      <if test="record.endDat != null" >
        end_dat = #{record.endDat,jdbcType=DATE},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update work
    set id = #{record.id,jdbcType=INTEGER},
      gid = #{record.gid,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      extend = #{record.extend,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      count = #{record.count,jdbcType=INTEGER},
      language = #{record.language,jdbcType=INTEGER},
      point = #{record.point,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      provider = #{record.provider,jdbcType=INTEGER},
      is_del = #{record.isDel,jdbcType=INTEGER},
      start_dat = #{record.startDat,jdbcType=DATE},
      end_dat = #{record.endDat,jdbcType=DATE},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update work
    set id = #{record.id,jdbcType=INTEGER},
      gid = #{record.gid,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      extend = #{record.extend,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      count = #{record.count,jdbcType=INTEGER},
      language = #{record.language,jdbcType=INTEGER},
      point = #{record.point,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      provider = #{record.provider,jdbcType=INTEGER},
      is_del = #{record.isDel,jdbcType=INTEGER},
      start_dat = #{record.startDat,jdbcType=DATE},
      end_dat = #{record.endDat,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.pojo.Work" >
    update work
    <set >
      <if test="gid != null" >
        gid = #{gid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="extend != null" >
        extend = #{extend,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="language != null" >
        language = #{language,jdbcType=INTEGER},
      </if>
      <if test="point != null" >
        point = #{point,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="provider != null" >
        provider = #{provider,jdbcType=INTEGER},
      </if>
      <if test="isDel != null" >
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="startDat != null" >
        start_dat = #{startDat,jdbcType=DATE},
      </if>
      <if test="endDat != null" >
        end_dat = #{endDat,jdbcType=DATE},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.neuedu.pojo.Work" >
    update work
    set gid = #{gid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      extend = #{extend,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      count = #{count,jdbcType=INTEGER},
      language = #{language,jdbcType=INTEGER},
      point = #{point,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      provider = #{provider,jdbcType=INTEGER},
      is_del = #{isDel,jdbcType=INTEGER},
      start_dat = #{startDat,jdbcType=DATE},
      end_dat = #{endDat,jdbcType=DATE},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.pojo.Work" >
    update work
    set gid = #{gid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      extend = #{extend,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      count = #{count,jdbcType=INTEGER},
      language = #{language,jdbcType=INTEGER},
      point = #{point,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      provider = #{provider,jdbcType=INTEGER},
      is_del = #{isDel,jdbcType=INTEGER},
      start_dat = #{startDat,jdbcType=DATE},
      end_dat = #{endDat,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>