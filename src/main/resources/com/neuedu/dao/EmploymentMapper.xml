<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.dao.EmploymentMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.pojo.Employment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="s_id" property="sId" jdbcType="INTEGER" />
    <result column="c_name" property="cName" jdbcType="VARCHAR" />
    <result column="j_id" property="jId" jdbcType="INTEGER" />
    <result column="is_skill" property="isSkill" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="offer" property="offer" jdbcType="INTEGER" />
    <result column="t_id" property="tId" jdbcType="INTEGER" />
    <result column="probation" property="probation" jdbcType="DECIMAL" />
    <result column="practice" property="practice" jdbcType="DECIMAL" />
    <result column="salary" property="salary" jdbcType="DECIMAL" />
    <result column="insurance" property="insurance" jdbcType="INTEGER" />
    <result column="fund" property="fund" jdbcType="INTEGER" />
    <result column="month" property="month" jdbcType="INTEGER" />
    <result column="stock" property="stock" jdbcType="INTEGER" />
    <result column="other" property="other" jdbcType="DECIMAL" />
    <result column="choice" property="choice" jdbcType="INTEGER" />
    <result column="c_date" property="cDate" jdbcType="DATE" />
    <result column="offer_date" property="offerDate" jdbcType="DATE" />
    <result column="is_del" property="isDel" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, s_id, c_name, j_id, is_skill, type, offer, t_id, probation, practice, salary, 
    insurance, fund, month, stock, other, choice, c_date, offer_date, is_del
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.neuedu.pojo.EmploymentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.pojo.EmploymentExample" >
    delete from employment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.pojo.Employment" >
    insert into employment (id, s_id, c_name, 
      j_id, is_skill, type, 
      offer, t_id, probation, 
      practice, salary, insurance, 
      fund, month, stock, 
      other, choice, c_date, 
      offer_date, is_del)
    values (#{id,jdbcType=INTEGER}, #{sId,jdbcType=INTEGER}, #{cName,jdbcType=VARCHAR}, 
      #{jId,jdbcType=INTEGER}, #{isSkill,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{offer,jdbcType=INTEGER}, #{tId,jdbcType=INTEGER}, #{probation,jdbcType=DECIMAL}, 
      #{practice,jdbcType=DECIMAL}, #{salary,jdbcType=DECIMAL}, #{insurance,jdbcType=INTEGER}, 
      #{fund,jdbcType=INTEGER}, #{month,jdbcType=INTEGER}, #{stock,jdbcType=INTEGER}, 
      #{other,jdbcType=DECIMAL}, #{choice,jdbcType=INTEGER}, #{cDate,jdbcType=DATE}, 
      #{offerDate,jdbcType=DATE}, #{isDel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.pojo.Employment" >
    insert into employment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sId != null" >
        s_id,
      </if>
      <if test="cName != null" >
        c_name,
      </if>
      <if test="jId != null" >
        j_id,
      </if>
      <if test="isSkill != null" >
        is_skill,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="offer != null" >
        offer,
      </if>
      <if test="tId != null" >
        t_id,
      </if>
      <if test="probation != null" >
        probation,
      </if>
      <if test="practice != null" >
        practice,
      </if>
      <if test="salary != null" >
        salary,
      </if>
      <if test="insurance != null" >
        insurance,
      </if>
      <if test="fund != null" >
        fund,
      </if>
      <if test="month != null" >
        month,
      </if>
      <if test="stock != null" >
        stock,
      </if>
      <if test="other != null" >
        other,
      </if>
      <if test="choice != null" >
        choice,
      </if>
      <if test="cDate != null" >
        c_date,
      </if>
      <if test="offerDate != null" >
        offer_date,
      </if>
      <if test="isDel != null" >
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sId != null" >
        #{sId,jdbcType=INTEGER},
      </if>
      <if test="cName != null" >
        #{cName,jdbcType=VARCHAR},
      </if>
      <if test="jId != null" >
        #{jId,jdbcType=INTEGER},
      </if>
      <if test="isSkill != null" >
        #{isSkill,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="offer != null" >
        #{offer,jdbcType=INTEGER},
      </if>
      <if test="tId != null" >
        #{tId,jdbcType=INTEGER},
      </if>
      <if test="probation != null" >
        #{probation,jdbcType=DECIMAL},
      </if>
      <if test="practice != null" >
        #{practice,jdbcType=DECIMAL},
      </if>
      <if test="salary != null" >
        #{salary,jdbcType=DECIMAL},
      </if>
      <if test="insurance != null" >
        #{insurance,jdbcType=INTEGER},
      </if>
      <if test="fund != null" >
        #{fund,jdbcType=INTEGER},
      </if>
      <if test="month != null" >
        #{month,jdbcType=INTEGER},
      </if>
      <if test="stock != null" >
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="other != null" >
        #{other,jdbcType=DECIMAL},
      </if>
      <if test="choice != null" >
        #{choice,jdbcType=INTEGER},
      </if>
      <if test="cDate != null" >
        #{cDate,jdbcType=DATE},
      </if>
      <if test="offerDate != null" >
        #{offerDate,jdbcType=DATE},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.pojo.EmploymentExample" resultType="java.lang.Integer" >
    select count(*) from employment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update employment
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sId != null" >
        s_id = #{record.sId,jdbcType=INTEGER},
      </if>
      <if test="record.cName != null" >
        c_name = #{record.cName,jdbcType=VARCHAR},
      </if>
      <if test="record.jId != null" >
        j_id = #{record.jId,jdbcType=INTEGER},
      </if>
      <if test="record.isSkill != null" >
        is_skill = #{record.isSkill,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.offer != null" >
        offer = #{record.offer,jdbcType=INTEGER},
      </if>
      <if test="record.tId != null" >
        t_id = #{record.tId,jdbcType=INTEGER},
      </if>
      <if test="record.probation != null" >
        probation = #{record.probation,jdbcType=DECIMAL},
      </if>
      <if test="record.practice != null" >
        practice = #{record.practice,jdbcType=DECIMAL},
      </if>
      <if test="record.salary != null" >
        salary = #{record.salary,jdbcType=DECIMAL},
      </if>
      <if test="record.insurance != null" >
        insurance = #{record.insurance,jdbcType=INTEGER},
      </if>
      <if test="record.fund != null" >
        fund = #{record.fund,jdbcType=INTEGER},
      </if>
      <if test="record.month != null" >
        month = #{record.month,jdbcType=INTEGER},
      </if>
      <if test="record.stock != null" >
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.other != null" >
        other = #{record.other,jdbcType=DECIMAL},
      </if>
      <if test="record.choice != null" >
        choice = #{record.choice,jdbcType=INTEGER},
      </if>
      <if test="record.cDate != null" >
        c_date = #{record.cDate,jdbcType=DATE},
      </if>
      <if test="record.offerDate != null" >
        offer_date = #{record.offerDate,jdbcType=DATE},
      </if>
      <if test="record.isDel != null" >
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update employment
    set id = #{record.id,jdbcType=INTEGER},
      s_id = #{record.sId,jdbcType=INTEGER},
      c_name = #{record.cName,jdbcType=VARCHAR},
      j_id = #{record.jId,jdbcType=INTEGER},
      is_skill = #{record.isSkill,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      offer = #{record.offer,jdbcType=INTEGER},
      t_id = #{record.tId,jdbcType=INTEGER},
      probation = #{record.probation,jdbcType=DECIMAL},
      practice = #{record.practice,jdbcType=DECIMAL},
      salary = #{record.salary,jdbcType=DECIMAL},
      insurance = #{record.insurance,jdbcType=INTEGER},
      fund = #{record.fund,jdbcType=INTEGER},
      month = #{record.month,jdbcType=INTEGER},
      stock = #{record.stock,jdbcType=INTEGER},
      other = #{record.other,jdbcType=DECIMAL},
      choice = #{record.choice,jdbcType=INTEGER},
      c_date = #{record.cDate,jdbcType=DATE},
      offer_date = #{record.offerDate,jdbcType=DATE},
      is_del = #{record.isDel,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.pojo.Employment" >
    update employment
    <set >
      <if test="sId != null" >
        s_id = #{sId,jdbcType=INTEGER},
      </if>
      <if test="cName != null" >
        c_name = #{cName,jdbcType=VARCHAR},
      </if>
      <if test="jId != null" >
        j_id = #{jId,jdbcType=INTEGER},
      </if>
      <if test="isSkill != null" >
        is_skill = #{isSkill,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="offer != null" >
        offer = #{offer,jdbcType=INTEGER},
      </if>
      <if test="tId != null" >
        t_id = #{tId,jdbcType=INTEGER},
      </if>
      <if test="probation != null" >
        probation = #{probation,jdbcType=DECIMAL},
      </if>
      <if test="practice != null" >
        practice = #{practice,jdbcType=DECIMAL},
      </if>
      <if test="salary != null" >
        salary = #{salary,jdbcType=DECIMAL},
      </if>
      <if test="insurance != null" >
        insurance = #{insurance,jdbcType=INTEGER},
      </if>
      <if test="fund != null" >
        fund = #{fund,jdbcType=INTEGER},
      </if>
      <if test="month != null" >
        month = #{month,jdbcType=INTEGER},
      </if>
      <if test="stock != null" >
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="other != null" >
        other = #{other,jdbcType=DECIMAL},
      </if>
      <if test="choice != null" >
        choice = #{choice,jdbcType=INTEGER},
      </if>
      <if test="cDate != null" >
        c_date = #{cDate,jdbcType=DATE},
      </if>
      <if test="offerDate != null" >
        offer_date = #{offerDate,jdbcType=DATE},
      </if>
      <if test="isDel != null" >
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.pojo.Employment" >
    update employment
    set s_id = #{sId,jdbcType=INTEGER},
      c_name = #{cName,jdbcType=VARCHAR},
      j_id = #{jId,jdbcType=INTEGER},
      is_skill = #{isSkill,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      offer = #{offer,jdbcType=INTEGER},
      t_id = #{tId,jdbcType=INTEGER},
      probation = #{probation,jdbcType=DECIMAL},
      practice = #{practice,jdbcType=DECIMAL},
      salary = #{salary,jdbcType=DECIMAL},
      insurance = #{insurance,jdbcType=INTEGER},
      fund = #{fund,jdbcType=INTEGER},
      month = #{month,jdbcType=INTEGER},
      stock = #{stock,jdbcType=INTEGER},
      other = #{other,jdbcType=DECIMAL},
      choice = #{choice,jdbcType=INTEGER},
      c_date = #{cDate,jdbcType=DATE},
      offer_date = #{offerDate,jdbcType=DATE},
      is_del = #{isDel,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="reportByGrade" resultType="java.util.Map" parameterType="com.neuedu.pojo.EmploymentParams"  >
    select a.id,a.s_id,b.name as sname,c.name as jname, a.c_name, a.j_id, a.is_skill, a.type, a.offer, a.t_id, a.probation, a.practice, a.salary,  a.insurance, a.fund, a.month, a.stock, a.other, a.choice, a.c_date, a.offer_date, a.is_del from employment as a left join student as b on a.s_id=b.id left join job as c on a.j_id=c.id
     <where>
        a.s_id in (select id from student where g_id=#{gId})
       <if test="start != null">
         and a.c_date&gt;#{start}
       </if>
       <if test="end != null">
         and a.c_date&lt;#{end}
       </if>
     </where>
  </select>
  <select id="reportByStudent" parameterType="java.lang.Integer" resultType="java.util.Map">
        select a.id,a.s_id,b.name as sname,c.name as jname, a.c_name, a.j_id, a.is_skill, a.type, a.offer, a.t_id, a.probation, a.practice, a.salary,  a.insurance, a.fund, a.month, a.stock, a.other, a.choice, a.c_date, a.offer_date, a.is_del from employment as a left join student as b on a.s_id=b.id left join job as c on a.j_id=c.id
    <where>
      a.s_id=#{1}
    </where>
  </select>

  <!--///////////zhangxin////////////-->
  <!--//获取就业信息数据-->
  <select id="selectAllJobs" parameterType="com.neuedu.vo.ParmaVOAll" resultMap="BaseResultMap">
    select id,s_id,c_name,j_id, is_skill, type, offer, t_id, probation, practice, salary, insurance, fund, month,
    stock, other, choice, c_date, offer_date, is_del
    from employment
    <where>
      <if test="c_name != null and c_name !=''">
        c_name = #{c_name}
      </if>
    </where>
  </select>

  <!--获取就业信息详情-->
  <select id="selectJobsDetil" resultType="com.neuedu.pojo.Employment"></select>

  <!--按公司名称获取面试人数-->
  <select id="selectJobNum" parameterType="string" resultType="java.lang.Integer">
        SELECT count(c_name) FROM employment WHERE c_name=#{cname}
    </select>
  <!--按公司名称获取有offer的人数-->
  <select id="selectOfferNum" parameterType="string" resultType="java.lang.Integer">
        SELECT count(c_name) FROM employment WHERE c_name=#{cname} and offer=1
    </select>
  <!--按公司名称统计平均工资-->
  <select id="selectAvgMoney" parameterType="string" resultType="java.lang.Double">
        SELECT avg(salary) FROM employment WHERE c_name=#{cname} and offer=1;
    </select>
  <!--获取所有公司名称-->
  <select id="selectAllCompany" resultType="string">
        SELECT c_name FROM employment GROUP BY c_name
    </select>
  <!--参加该公司面试的人员详情-->
  <select id="selectJobDetilByCname" parameterType="com.neuedu.vo.ParmaVODetil" resultType="com.neuedu.vo.JobListCompanyDetil">
    select grade.name as gname,student.name as sname,student.school,employment.salary,job.name as jname FROM employment,student,grade,job
    <where>
      employment.s_id=student.id AND student.g_id = grade.id AND employment.j_id = job.id
      AND employment.c_name =#{cname}
      <if test="is_job == 1">
        AND employment.offer = #{is_job};
      </if>
    </where>
  </select>

  <!--获取每家公司就业数据-->
  <select id="selectAllJobByCompany"  resultType="com.neuedu.vo.JobListVOCompany">
        SELECT a.c_name,b.c_num,c.c_money FROM
        (SELECT c_name FROM employment GROUP BY c_name) as a,
        (SELECT c_name,count(c_name) as c_num FROM employment GROUP BY c_name) as b,
        (SELECT c_name,avg(salary) as c_money FROM employment GROUP BY c_name) as c
          WHERE a.c_name = b.c_name AND a.c_name = c.c_name
    </select>

  <!--判断公司是否存在-->
  <select id="selectByCompany" resultType="java.lang.Integer">
        select count(1) from  employment where c_name = #{c_name}
    </select>

  <!--获取每家公司入职人数-->
  <select id="selectByChoce" resultType="java.lang.Integer">
        select count(1) from  employment where c_name = #{c_name} and choice=1
    </select>
</mapper>