<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.dao.InterviewDetailsMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.pojo.InterviewDetails" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="i_id" property="iId" jdbcType="INTEGER" />
    <result column="s_id" property="sId" jdbcType="INTEGER" />
    <result column="skill" property="skill" jdbcType="INTEGER" />
    <result column="express" property="express" jdbcType="INTEGER" />
    <result column="is_del" property="isDel" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.neuedu.pojo.InterviewDetails" extends="BaseResultMap" >
    <result column="mark" property="mark" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, i_id, s_id, skill, express, is_del
  </sql>
  <sql id="Blob_Column_List" >
    mark
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.neuedu.pojo.InterviewDetailsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from interview_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.neuedu.pojo.InterviewDetailsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from interview_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from interview_details
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from interview_details
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.pojo.InterviewDetailsExample" >
    delete from interview_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.pojo.InterviewDetails" >
    insert into interview_details (id, i_id, s_id, 
      skill, express, is_del, 
      mark)
    values (#{id,jdbcType=INTEGER}, #{iId,jdbcType=INTEGER}, #{sId,jdbcType=INTEGER}, 
      #{skill,jdbcType=INTEGER}, #{express,jdbcType=INTEGER}, #{isDel,jdbcType=INTEGER}, 
      #{mark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.pojo.InterviewDetails" >
    insert into interview_details
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="iId != null" >
        i_id,
      </if>
      <if test="sId != null" >
        s_id,
      </if>
      <if test="skill != null" >
        skill,
      </if>
      <if test="express != null" >
        express,
      </if>
      <if test="isDel != null" >
        is_del,
      </if>
      <if test="mark != null" >
        mark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="iId != null" >
        #{iId,jdbcType=INTEGER},
      </if>
      <if test="sId != null" >
        #{sId,jdbcType=INTEGER},
      </if>
      <if test="skill != null" >
        #{skill,jdbcType=INTEGER},
      </if>
      <if test="express != null" >
        #{express,jdbcType=INTEGER},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="mark != null" >
        #{mark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.pojo.InterviewDetailsExample" resultType="java.lang.Integer" >
    select count(*) from interview_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update interview_details
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.iId != null" >
        i_id = #{record.iId,jdbcType=INTEGER},
      </if>
      <if test="record.sId != null" >
        s_id = #{record.sId,jdbcType=INTEGER},
      </if>
      <if test="record.skill != null" >
        skill = #{record.skill,jdbcType=INTEGER},
      </if>
      <if test="record.express != null" >
        express = #{record.express,jdbcType=INTEGER},
      </if>
      <if test="record.isDel != null" >
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
      <if test="record.mark != null" >
        mark = #{record.mark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update interview_details
    set id = #{record.id,jdbcType=INTEGER},
      i_id = #{record.iId,jdbcType=INTEGER},
      s_id = #{record.sId,jdbcType=INTEGER},
      skill = #{record.skill,jdbcType=INTEGER},
      express = #{record.express,jdbcType=INTEGER},
      is_del = #{record.isDel,jdbcType=INTEGER},
      mark = #{record.mark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update interview_details
    set id = #{record.id,jdbcType=INTEGER},
      i_id = #{record.iId,jdbcType=INTEGER},
      s_id = #{record.sId,jdbcType=INTEGER},
      skill = #{record.skill,jdbcType=INTEGER},
      express = #{record.express,jdbcType=INTEGER},
      is_del = #{record.isDel,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.pojo.InterviewDetails" >
    update interview_details
    <set >
      <if test="iId != null" >
        i_id = #{iId,jdbcType=INTEGER},
      </if>
      <if test="sId != null" >
        s_id = #{sId,jdbcType=INTEGER},
      </if>
      <if test="skill != null" >
        skill = #{skill,jdbcType=INTEGER},
      </if>
      <if test="express != null" >
        express = #{express,jdbcType=INTEGER},
      </if>
      <if test="isDel != null" >
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="mark != null" >
        mark = #{mark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.neuedu.pojo.InterviewDetails" >
    update interview_details
    set i_id = #{iId,jdbcType=INTEGER},
      s_id = #{sId,jdbcType=INTEGER},
      skill = #{skill,jdbcType=INTEGER},
      express = #{express,jdbcType=INTEGER},
      is_del = #{isDel,jdbcType=INTEGER},
      mark = #{mark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.pojo.InterviewDetails" >
    update interview_details
    set i_id = #{iId,jdbcType=INTEGER},
      s_id = #{sId,jdbcType=INTEGER},
      skill = #{skill,jdbcType=INTEGER},
      express = #{express,jdbcType=INTEGER},
      is_del = #{isDel,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>